
▣ 예제87. 한줄짜리 이름없는 함수 만들기(lambda)

■ 람다 함수(`lambda`)의 필요성  

람다 함수는이름 없이 한 줄로 정의할 수 있는 익명 함수로, 다음과 같은 상황에서 유용하게 사용됨.

1. 간단한 연산을 수행할 때 코드 가독성을 높임

- 굳이 함수로 만들기에는 너무 짧고 단순한 연산을 빠르게 처리할 수 있음.


2. `map()`, `filter()`, `sorted()` 등과 함께 사용하여 코드 간결화
- 리스트의 각 요소를 변환할 때, 불필요한 함수 정의 없이 사용 가능.


- 특정 조건을 만족하는 요소만 필터링할 때 활용.



3. 정렬 기준을 지정할 때 유용함
- `sorted()`에서 정렬 기준을 직접 지정할 수 있음.


4. 일회성 함수로 사용하기 적합
- 굳이 별도로 정의할 필요 없이 즉석에서 정의하여 사용 가능.


5. 함수형 프로그래밍 스타일에서 필수적
- `map`, `filter`, `reduce` 같은 함수형 프로그래밍 패턴에서 빠르고 깔끔한 코드 작성 가능.


■ 결론:

람다 함수는짧고 간단한 연산을 빠르게 처리할 때,일회성 함수가 필요할 때, 
기존 함수(`map`, `filter`, `sorted` 등)와 함께 사용할 때 유용함. 하지만 너무 복잡한 로직을 람다로 만들면 가독성이 떨어질 수 있으므로, 
적절한 상황에서만 사용하는 것이 중요함.


