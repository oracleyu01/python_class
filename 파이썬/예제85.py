# ▣ 예제85. 파이썬 함수

### **파이썬 함수의 필요성**

1. **코드의 재사용성**  
   - 동일한 기능을 여러 번 사용할 경우, 함수를 사용하면 중복을 줄이고 유지보수를 쉽게 할 수 있다.

2. **코드의 가독성**  
   - 함수를 사용하면 코드의 구조가 명확해지고, 각 부분이 어떤 역할을 하는지 쉽게 이해할 수 있다.

3. **유지보수의 용이성**  
   - 함수를 사용하면 특정 기능을 수정할 때 한 곳만 수정하면 되므로, 버그를 줄이고 유지보수가 편리해진다.

---

### **파이썬 함수 문법**


def 함수이름(매개변수1, 매개변수2, ...):
    """문서화 문자열 (함수 설명)"""
    실행할 코드
    return 반환값


- `def` 키워드를 사용하여 함수를 정의한다.
- 함수 이름 뒤에 괄호 `()`를 사용하며, 필요한 경우 매개변수를 전달할 수 있다.
- `return` 문을 사용하여 결과값을 반환할 수 있으며, 반환값이 없을 수도 있다.

---

### **예제: 함수 사용 전후 비교**

#### 1. 코드의 재사용성 비교
##### **함수 없이 동일한 코드 반복**



   

##### **함수를 사용하여 중복 제거**


   

- 동일한 동작을 여러 번 수행해야 할 때, 함수를 사용하면 코드가 훨씬 간결해진다.

---

#### 2. 코드의 가독성 비교
##### **함수 없이 코드가 길고 복잡한 경우**




   

##### **함수를 사용하여 가독성 향상**




   
- 함수명을 보면 어떤 기능을 수행하는지 알 수 있어 코드가 직관적이다.

---

#### 3. 유지보수의 용이성 비교
##### **함수 없이 코드 수정이 어려운 경우**





   
- 넓이를 구하는 공식을 바꾸려면 여러 곳을 수정해야 한다.

##### **함수를 사용하여 유지보수 용이**






   
- 공식을 변경해야 할 경우, 함수 내부 코드만 수정하면 되므로 유지보수가 쉽다.

---

### **결론**

- **코드의 재사용성**: 같은 작업을 여러 번 반복할 필요 없이 함수를 호출하면 됨.
- **코드의 가독성**: 함수 이름만 보아도 어떤 기능을 수행하는지 쉽게 이해할 수 있음.
- **유지보수의 용이성**: 함수를 수정하면 전체 코드가 변경되므로, 관리가 쉬움.

이렇게 함수를 활용하면 코드가 간결하고 효율적으로 작성될 수 있다.
