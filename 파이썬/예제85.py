# 파이썬 함수 수업

## 함수의 필요성

파이썬 함수는 프로그래밍에서 매우 중요한 개념입니다. 함수를 사용하는 주요 이유는 다음과 같습니다:

1. **코드 재사용성 향상**
   - 같은 코드를 여러 번 작성하지 않고, 한 번 정의하여 필요할 때마다 호출할 수 있습니다.

2. **코드 가독성 및 유지보수성 향상**
   - 복잡한 작업을 의미 있는 이름의 함수로 분리하면, 코드를 더 쉽게 이해하고 관리할 수 있습니다.

3. **모듈화 및 구조화**
   - 큰 프로그램을 작은 기능 단위로 나누어 관리할 수 있습니다.

## 파이썬 함수 문법

함수는 다음과 같은 기본 형태를 가집니다:

```
def 함수이름(매개변수1, 매개변수2, ...):
    """함수 설명 문서 (독스트링)"""
    # 함수 본문
    # 코드 작성
    return 반환값  # 선택적
```

- `def`: 함수를 정의하는 키워드
- `함수이름`: 함수를 호출할 때 사용하는 이름
- `매개변수`: 함수에 전달되는 입력값 (선택적)
- `return`: 함수가 계산한 결과를 반환 (선택적)

## 실습 예제: 함수 사용의 차이점 비교

### 예제 1: 평균 계산

**함수 사용하지 않을 때:**
- 각 학생별로 국어, 영어, 수학 점수 변수를 따로 선언
- 각 학생별로 평균 계산 공식을 반복해서 작성
- 학생이 추가될 때마다 동일한 코드를 반복 작성

**함수 사용할 때:**
- 평균 계산 함수 한 번만 정의
- 함수를 호출하여 각 학생의 점수로 평균 계산
- 코드가 간결해지고 반복 작업 감소

### 예제 2: 할인 가격 계산

**함수 사용하지 않을 때:**
- 각 상품별로 할인 계산 과정을 반복 작성
- 동일한 계산 로직이 여러 번 등장
- 계산 방식 변경 시 여러 곳을 수정해야 함

**함수 사용할 때:**
- 할인 계산 로직을 함수로 한 번만 정의
- 다양한 상품에 동일한 함수 재사용
- 계산 방식 변경 시 함수 내용만 수정하면 됨

### 예제 3: 학생 성적 처리

**함수 사용하지 않을 때:**
- 학생마다 점수 합계, 평균, 학점 부여 로직을 반복 작성
- 코드가 길어지고 복잡해짐
- 학생이 많아질수록 코드 중복 증가

**함수 사용할 때:**
- 합계, 평균, 학점 부여 등 각 기능을 함수로 분리
- 학생 정보 출력을 위한 통합 함수 작성
- 학생 수가 늘어나도 함수 호출만 추가하면 됨

## 추가 연습 문제

1. **팩토리얼 계산 함수**: 숫자 n을 입력받아 n! (n 팩토리얼)을 계산하는 함수를 만들어보세요.
   - n이 0이나 1이면 1을 반환
   - 그 외의 경우 1부터 n까지의 곱을 계산

2. **소수 판별 함수**: 숫자를 입력받아 소수(prime number)인지 판별하는 함수를 작성해보세요.
   - 1보다 큰 자연수 중 1과 자기 자신만을 약수로 가지는 수
   - 효율적인 판별 알고리즘 고민해보기

3. **온도 변환 함수**: 섭씨 온도를 입력받아 화씨 온도로 변환하는 함수와, 화씨 온도를 입력받아 섭씨 온도로 변환하는 함수를 각각 작성해보세요.
   - 섭씨 → 화씨: (섭씨 × 9/5) + 32
   - 화씨 → 섭씨: (화씨 - 32) × 5/9
