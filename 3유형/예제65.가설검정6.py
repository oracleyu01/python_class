■ 예제65. 가설검정6 .두 모집단의 모평균 차이 검정: 대응표본 (t 검정)


가설검정
 ├─ 정규분포를 따르는 경우
 │   ├─ 단일 모집단의 모평균 검정
 │   │    ├─ 분산을 아는 경우  →  Z 검정   
 │   │    └─ 분산을 모르는 경우 →  t 검정 
 │   ├─ 두 모집단의 모평균 차이 검정
 │   │    ├─ 독립 표본         →  t 검정  
 │   │    └─ 대응 표본         →  t 검정<---  😊 이 부분을 하고 있어요
 │   └─ 세 모집단 이상의 모평균 차이 검정
 │        → ANOVA
 └─ 정규분포를 따르지 않는 경우
      → 비모수적 가설 검정

--------------------------------
[대응표본 t-검정 이론 정리]

대응표본 t-검정(Paired Sample t-test) 이론 정리

1. 정의

   - 대응표본 t-검정(Paired Sample t-test)은 동일한 대상 또는 서로 매칭된 두 집단에서 측정한 
     두 조건(예: 처치 전후, 두 시점, 두 방법 등) 간의 평균 차이가 통계적으로 유의한지를 검정하는 방법입니다.

   - 즉, 같은 대상에서 두 번 측정된 값의 차이(예: 치료 전후의 혈압 변화)가 통계적으로 유의미한지를 평가합니다.
    
   - 검정의 귀무가설(H0)은 두 조건의 평균 차이가 0이다, 즉, 처치나 시간 경과에 따른 효과가 없다는 것입니다.

2. 주요 가정

   - 대응된 두 값의 차이(di)가 정규분포를 따른다.
     (즉, 원본 데이터가 정규성을 따를 필요는 없지만, 두 값의 차이를 계산한 값들이 정규분포를 따라야 합니다.)
    
   - 데이터는 쌍으로 매칭되어 있으며, 쌍 간 독립적이어야 한다.
     (즉, 각 개별 샘플 쌍은 독립적이어야 하지만, 같은 샘플 내의 두 측정치는 종속적입니다.)
    
   - 표본의 크기가 작을 경우(n < 30), 차이값(di)의 정규성 가정이 중요하다.
     → 표본이 작다면 정규성 검정을 먼저 수행해야 합니다.
     → 표본이 충분히 크다면(n ≥ 30) 중심극한정리에 의해 정규성 가정이 크게 중요하지 않습니다.

3. 검정통계량

   - 먼저, 각 쌍에 대해 차이값(di = Xi - Yi)을 계산한 후, 차이값의 평균(d̄)과 표준편차(sd)를 구합니다.
   - 검정통계량(t)은 다음과 같이 계산됩니다.

     t = d̄ / (sd / √n)

     여기서,
     - d̄ = 차이값의 평균
     - sd = 차이값의 표준편차
     - n = 쌍의 개수(즉, 표본의 크기)

   - 자유도(df)는 n - 1 입니다.

--------------------------------
[기출문제 정리]

● 2024년 제7회 빅데이터분석기사 필기

   - 문제:
         대응표본 t-검정에 대한 설명으로 옳은 것은?
         1) 서로 다른 두 집단의 평균을 비교할 때 사용한다
         2) 같은 집단에서 두 시점이나 두 조건에서 나온 데이터를 비교할 때 사용한다
         3) 정규성 가정이 필요하지 않다
         4) 표본 크기가 항상 30개 이상이어야 한다
   - 정답: 

   - 해설:
         대응표본 t-검정은 동일한 대상이나 매칭된 쌍의 데이터를 비교하여 두 조건 간의 평균 차이를 분석할 때 사용합니다.

● 2023년 제6회 빅데이터분석기사 필기

   - 문제:
         대응표본 t-검정을 사용하는 경우는?
         1) 동일한 대상에게 처치 전후 효과를 측정할 때
         2) 서로 다른 두 집단의 평균을 비교할 때
         3) 세 개 이상 집단의 평균을 비교할 때
         4) 범주형 변수 간의 관계를 분석할 때
   - 정답: 

   - 해설:
         대응표본 t-검정은 같은 대상에게서 처치 전후 데이터를 수집하여, 변화가 유의한지를 검정할 때 사용합니다.

● 2022년 제5회 빅데이터분석기사 필기

   - 문제:
         대응표본 t-검정의 가정으로 옳은 것은?
         1) 두 집단의 표본 크기가 같아야 한다
         2) 두 집단이 서로 독립적이어야 한다
         3) 두 집단의 차이가 정규분포를 따라야 한다
         4) 두 집단의 분산이 같아야 한다
   - 정답: 

   - 해설:
         대응표본 t-검정은 각 쌍의 차이가 정규분포를 따른다는 가정을 전제로 합니다.
         (표본 크기가 충분히 크다면 정규성 가정이 완화될 수 있으나, 소규모 표본의 경우 반드시 확인해야 합니다.)

--------------------------------
[😊 파이썬 코드 예제: 대응표본 t-검정]

# 예제: 대응표본 t-검정 수행 (양측 검정)

# 동일한 학생들이 시험 전(pre-test)과 후(post-test)에 받은 점수가 유의미하게 변화했는지를 검정하려 합니다.
# 10명의 학생이 시험을 치르기 전(pre-test)과 후(post-test)에 받은 점수 데이터를 사용하여 
# 유의수준 0.05에서 대응표본 t-검정을 수행하세요.

# 10명의 학생이 시험을 치르기 전(pre-test)과 후(post-test)에 받은 점수
before = np.array([55, 60, 65, 70, 75, 80, 85, 90, 95, 100])  # 사전 테스트 점수
after = np.array([56.99, 60.72, 67.30, 74.05, 75.53, 80.53, 89.16, 92.53, 95.06, 102.08])  # 사후 테스트 점수



답:


import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt
import statsmodels.api as sm

# 한글 폰트 설정 (윈도우 사용자)
plt.rc('font', family='Malgun Gothic')
plt.rcParams['axes.unicode_minus'] = False  # 마이너스 기호 깨짐 방지

# 1. 가설 설정
H0 = "두 시점의 평균 차이는 없다. (μ_pre = μ_post)"
H1 = "두 시점의 평균 차이는 있다. (μ_pre ≠ μ_post)"




# 😊 문제: 대응표본 t-검정 수행 (양측검정)
[문제] 다이어트 프로그램의 효과 검정

다음은 10명의 참가자를 대상으로 한 다이어트 프로그램의 효과를 검정하는 문제입니다.

10명의 참가자가 6주간의 다이어트 프로그램에 참여했습니다. 프로그램 시작 전과 종료 후에 각 참가자의 체중을 측정하였습니다. 다이어트 프로그램이 체중 감량에 효과가 있는지 확인하기 위해 다음 가설을 설정하였습니다:

귀무가설(H₀): 다이어트 전후의 평균 체중 차이는 없다. (μ_before = μ_after)
대립가설(H₁): 다이어트 전후의 평균 체중 차이는 있다. (μ_before ≠ μ_after)

참가자들의 다이어트 전후 체중 데이터는 다음과 같습니다:

다이어트 전 체중(before): [80.5, 82.0, 78.3, 85.1, 90.2, 76.4, 88.7, 92.5, 79.6, 84.0]
다이어트 후 체중(after): [80.1, 81.2, 77.6, 84.4, 89.2, 75.8, 87.9, 91.5, 79.0, 83.2]

이 데이터를 사용하여 유의수준 α = 0.05에서 대응표본 t-검정을 수행하세요.

요구사항:
1. 차이값(before - after)에 대한 정규성 검정을 수행하여 t-검정의 가정이 만족되는지 확인하세요.
2. 적절한 t-검정을 수행하고 결과를 해석하세요.
3. Q-Q 플롯을 그려 정규성을 시각적으로 확인하세요.
4. t-분포에서 검정 통계량과 기각역을 시각화하여 결과를 그래프로 표현하세요.
5. 귀무가설의 기각 여부와 최종 결론을 제시하세요.

Hint: 차이값의 정규성 검정에는 Shapiro-Wilk 검정을 사용하세요.

import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt
import statsmodels.api as sm


# 데이터 생성 
before = np.array([80.5, 82.0, 78.3, 85.1, 90.2, 76.4, 88.7, 92.5, 79.6, 84.0])  # 다이어트 전 체중
after = np.array([80.1, 81.2, 77.6, 84.4, 89.2, 75.8, 87.9, 91.5, 79.0, 83.2])  # 다이어트 후 체중

# 1. 가설 설정
H0 = "다이어트 전후의 평균 체중 차이는 없다. (μ_before = μ_after)"
H1 = "다이어트 전후의 평균 체중 차이는 있다. (μ_before ≠ μ_after)"

